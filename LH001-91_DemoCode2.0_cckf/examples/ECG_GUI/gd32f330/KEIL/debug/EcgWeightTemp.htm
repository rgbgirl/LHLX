<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\debug\EcgWeightTemp.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\debug\EcgWeightTemp.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Tue Mar 21 22:04:32 2023
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; process_adc_data &rArr; panTompkins &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[16]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">ADC_CMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC_CMP_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[26]">CEC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[13]">DMA_Channel0_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[14]">DMA_Channel1_2_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[15]">DMA_Channel3_4_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2a]">DMA_Channel5_6_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from main.o(.text.EXTI4_15_IRQHandler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[d]">FMC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[27]">I2C0_ER_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[20]">I2C0_EV_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[28]">I2C1_ER_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[21]">I2C1_EV_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[e]">RCU_CTC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[22]">SPI0_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2d]">SystemInit</a> from system_gd32f3x0.o(.text.SystemInit) referenced from startup_gd32f3x0.o(.text)
 <LI><a href="#[17]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[18]">TIMER0_Channel_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1c]">TIMER13_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1d]">TIMER14_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1e]">TIMER15_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1f]">TIMER16_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[19]">TIMER1_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1a]">TIMER2_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[1b]">TIMER5_DAC_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[12]">TSI_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[24]">USART0_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[25]">USART1_IRQHandler</a> from main.o(.text.USART1_IRQHandler) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2b]">USBFS_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[29]">USBFS_WKUP_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32f3x0.o(.text) referenced from startup_gd32f3x0.o(RESET)
 <LI><a href="#[2e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f3x0.o(.text)
 <LI><a href="#[2f]">fputc</a> from uart_print.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[2c]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[30]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[97]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[98]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[99]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA_Channel5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBFS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>USBFS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f3x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;panTompkins
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;panTompkins
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shift_avergage
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;panTompkins
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;panTompkins
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shift_avergage
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shift_avergage
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[9d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[9e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[9f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[a1]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[35]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EXTI4_15_IRQHandler &rArr; lh001_91_read_data_nofifo &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_data_nofifo
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SystemInit</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, system_gd32f3x0.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; system_clock_config &rArr; system_clock_84m_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>USART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART1_IRQHandler &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_write
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f3x0.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>debug_pin_init</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, uart_print.o(.text.debug_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = debug_pin_init &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>exti_init</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, gd32f3x0_exti.o(.text.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[46]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, gd32f3x0_exti.o(.text.exti_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = exti_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[45]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gd32f3x0_exti.o(.text.exti_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exti_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[2f]"></a>fputc</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, uart_print.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fputc &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[7a]"></a>gpio_af_set</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, gd32f3x0_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[4f]"></a>gpio_mode_set</STRONG> (Thumb, 156 bytes, Stack size 28 bytes, gd32f3x0_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_pin_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[50]"></a>gpio_output_options_set</STRONG> (Thumb, 262 bytes, Stack size 28 bytes, gd32f3x0_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_pin_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[52]"></a>lh001_91_adc_channel</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lh001_91.o(.text.lh001_91_adc_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lh001_91_adc_channel &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[54]"></a>lh001_91_adc_go</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lh001_91.o(.text.lh001_91_adc_go))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lh001_91_adc_go &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_start
</UL>

<P><STRONG><a name="[56]"></a>lh001_91_adc_init</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, lh001_91.o(.text.lh001_91_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lh001_91_adc_init &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[58]"></a>lh001_91_adc_stop</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lh001_91.o(.text.lh001_91_adc_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lh001_91_adc_stop &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_stop
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_hw_reset
</UL>

<P><STRONG><a name="[59]"></a>lh001_91_hw_reset</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lh001_91.o(.text.lh001_91_hw_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lh001_91_hw_reset &rArr; lh001_91_rdatac_stop &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_delay_10us
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rdatac_stop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>lh001_91_leadoff_init</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, lh001_91.o(.text.lh001_91_leadoff_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lh001_91_leadoff_init &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[5d]"></a>lh001_91_pga_init</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, lh001_91.o(.text.lh001_91_pga_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lh001_91_pga_init &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[5e]"></a>lh001_91_rdatac_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lh001_91.o(.text.lh001_91_rdatac_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lh001_91_rdatac_start &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_start
</UL>

<P><STRONG><a name="[5b]"></a>lh001_91_rdatac_stop</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lh001_91.o(.text.lh001_91_rdatac_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lh001_91_rdatac_stop &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_stop
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_hw_reset
</UL>

<P><STRONG><a name="[47]"></a>lh001_91_read_data_nofifo</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, lh001_91.o(.text.lh001_91_read_data_nofifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lh001_91_read_data_nofifo &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>lh001_91_read_regs</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, lh001_91.o(.text.lh001_91_read_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lh001_91_read_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_pga_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_leadoff_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>lh001_91_rld_init</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lh001_91.o(.text.lh001_91_rld_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lh001_91_rld_init &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[53]"></a>lh001_91_write_regs</STRONG> (Thumb, 602 bytes, Stack size 72 bytes, lh001_91.o(.text.lh001_91_write_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_channel
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_pga_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rld_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_leadoff_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>lh_ecg_init</STRONG> (Thumb, 118 bytes, Stack size 96 bytes, lh_ecg.o(.text.lh_ecg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lh_ecg_init &rArr; lh001_91_adc_init &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;panTompkinsInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_channel
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_pga_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rld_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_leadoff_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_stop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lms_filter_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[63]"></a>lh_ecg_start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lh_ecg.o(.text.lh_ecg_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lh_ecg_start &rArr; lh001_91_rdatac_start &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rdatac_start
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_go
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[64]"></a>lh_ecg_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lh_ecg.o(.text.lh_ecg_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lh_ecg_stop &rArr; lh001_91_rdatac_stop &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rdatac_stop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[72]"></a>lh_filter_highpass</STRONG> (Thumb, 258 bytes, Stack size 12 bytes, lh_ecg.o(.text.lh_filter_highpass))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lh_filter_highpass
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[70]"></a>lh_filter_lowpass</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, lh_ecg.o(.text.lh_filter_lowpass))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lh_filter_lowpass
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[61]"></a>lms_filter_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, adaptive_lms.o(.text.lms_filter_init))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[2c]"></a>main</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = main &rArr; process_adc_data &rArr; panTompkins &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_frame_process
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_regs
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_hw_reset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_pin_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_int_en
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6c]"></a>nvic_irq_enable</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, gd32f3x0_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_int_en
</UL>

<P><STRONG><a name="[6d]"></a>nvic_priority_group_set</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32f3x0_misc.o(.text.nvic_priority_group_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[49]"></a>nvic_vector_table_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32f3x0_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6e]"></a>panTompkins</STRONG> (Thumb, 1830 bytes, Stack size 56 bytes, pantompkins.o(.text.panTompkins))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = panTompkins &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[62]"></a>panTompkinsInit</STRONG> (Thumb, 426 bytes, Stack size 8 bytes, pantompkins.o(.text.panTompkinsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = panTompkinsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
</UL>

<P><STRONG><a name="[6b]"></a>process_adc_data</STRONG> (Thumb, 560 bytes, Stack size 152 bytes, process_cmd.o(.text.process_adc_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = process_adc_data &rArr; panTompkins &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;panTompkins
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shift_avergage
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_filter_lowpass
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_filter_highpass
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>process_cmd</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, process_cmd.o(.text.process_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = process_cmd &rArr; lh_ecg_init &rArr; lh001_91_adc_init &rArr; lh001_91_write_regs &rArr; stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_stop
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_start
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh_ecg_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>rcu_clock_freq_get</STRONG> (Thumb, 972 bytes, Stack size 128 bytes, gd32f3x0_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[4e]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32f3x0_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_pin_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[77]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32f3x0_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[76]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32f3x0_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[71]"></a>shift_avergage</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lh_ecg.o(.text.shift_avergage))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = shift_avergage &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[7d]"></a>spi_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32f3x0_spi.o(.text.spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[80]"></a>spi_i2s_data_receive</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, gd32f3x0_spi.o(.text.spi_i2s_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>

<P><STRONG><a name="[7f]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32f3x0_spi.o(.text.spi_i2s_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>

<P><STRONG><a name="[75]"></a>spi_i2s_deinit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gd32f3x0_spi.o(.text.spi_i2s_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_i2s_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[7e]"></a>spi_i2s_flag_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gd32f3x0_spi.o(.text.spi_i2s_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_i2s_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_txrx8bit
</UL>

<P><STRONG><a name="[7c]"></a>spi_init</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, gd32f3x0_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[7b]"></a>spi_struct_para_init</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32f3x0_spi.o(.text.spi_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[5a]"></a>stm_lh_delay_10us</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, spi_port.o(.text.stm_lh_delay_10us))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = stm_lh_delay_10us
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_hw_reset
</UL>

<P><STRONG><a name="[66]"></a>stm_lh_spi_init</STRONG> (Thumb, 330 bytes, Stack size 88 bytes, spi_port.o(.text.stm_lh_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stm_lh_spi_init &rArr; nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>stm_lh_spi_txrx8bit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, spi_port.o(.text.stm_lh_spi_txrx8bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = stm_lh_spi_txrx8bit &rArr; spi_i2s_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rdatac_stop
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_rdatac_start
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_go
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_adc_stop
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_data_nofifo
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_write_regs
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lh001_91_read_regs
</UL>

<P><STRONG><a name="[78]"></a>syscfg_exti_line_config</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, gd32f3x0_syscfg.o(.text.syscfg_exti_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stm_lh_spi_init
</UL>

<P><STRONG><a name="[82]"></a>uart_fifo_getnum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart_frame.o(.text.uart_fifo_getnum))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_frame_process
</UL>

<P><STRONG><a name="[68]"></a>uart_fifo_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart_frame.o(.text.uart_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>uart_fifo_read</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, uart_frame.o(.text.uart_fifo_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_fifo_read
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_frame_process
</UL>

<P><STRONG><a name="[4c]"></a>uart_fifo_write</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, uart_frame.o(.text.uart_fifo_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_fifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>uart_frame_process</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, uart_frame.o(.text.uart_frame_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uart_frame_process &rArr; uart_fifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_read
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_getnum
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>uart_print_init</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, uart_print.o(.text.uart_print_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = uart_print_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>uart_rx_int_en</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, main.o(.text.uart_rx_int_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uart_rx_int_en &rArr; nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>usart_baudrate_set</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, gd32f3x0_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[4b]"></a>usart_data_receive</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gd32f3x0_usart.o(.text.usart_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>usart_data_transmit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[84]"></a>usart_deinit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gd32f3x0_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usart_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[8b]"></a>usart_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32f3x0_usart.o(.text.usart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[4a]"></a>usart_flag_get</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, gd32f3x0_usart.o(.text.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>usart_interrupt_disable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_int_en
</UL>

<P><STRONG><a name="[8d]"></a>usart_interrupt_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_int_en
</UL>

<P><STRONG><a name="[87]"></a>usart_parity_config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_parity_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_parity_config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[89]"></a>usart_receive_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[86]"></a>usart_stop_bit_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_stop_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_stop_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[8a]"></a>usart_transmit_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_transmit_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_transmit_config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[85]"></a>usart_word_length_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32f3x0_usart.o(.text.usart_word_length_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_word_length_set
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
</UL>

<P><STRONG><a name="[8f]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a3]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[a4]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[a5]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[74]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_data
</UL>

<P><STRONG><a name="[a6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[48]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f3x0.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = system_clock_config &rArr; system_clock_84m_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_84m_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[81]"></a>system_clock_84m_irc8m</STRONG> (Thumb, 142 bytes, Stack size 4 bytes, system_gd32f3x0.o(.text.system_clock_84m_irc8m))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = system_clock_84m_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[91]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[90]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[94]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[93]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
